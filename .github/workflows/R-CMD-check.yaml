# on: [push, pull_request]
on:
  push:
    branches:
      - main
      - develop # This will eventually require a different container
    paths:
      - 'R/**'
      - 'DESCRIPTION'
      - 'NAMESPACE'
      - 'src/**'
      - 'tests/**'
  pull_request:
  schedule:
    # Rerun checks daily, after facilebio/facilebio_base is rebuilt.
    # This will catch failures due to changes in functionality of packages
    # we depend on.
    # facilebio_base builds every day at 1AM pacific and takes about 1 hour
    # this runs at same time as facilebio_base_extra
    - cron: '0 11 * * *'
  workflow_dispatch:
    inputs:
      dummy:
        description: 'A dummy variable to enable manual workflow execution'
        required: false
        default: 'gitty up'

name: R-CMD-check

env:
  has_testthat: 'true'

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ['lianos/sparrow:release', 'lianos/sparrow:devel']
    container: ${{ matrix.image }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}


    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        # with:
        #   ref: 'main'

      - name: Setup R
        uses: r-lib/actions/setup-r@v1
        with:
          install-r: false

      # I guess I didn't want to install this into the base
      - name: Install dependencies
        run: remotes::install_deps(dependencies = TRUE, upgrade = FALSE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
          DISPLAY: 99.0
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--no-vignettes", "--timings"),
            build_args = c("--no-manual", "--keep-empty-dirs", "--no-resave-data"),
            error_on = "warning",
            check_dir = "check")
        shell: Rscript {0}

      - name: Reveal testthat details
        run: find . -name testthat.Rout -exec cat '{}' ';'

      - name: Run BiocCheck
        env:
          DISPLAY: 99.0
        run: |
          BiocCheck::BiocCheck(
              dir('check', 'tar.gz$', full.names = TRUE),
              `quit-with-status` = TRUE,
              `no-check-R-ver` = TRUE,
              `no-check-bioc-help` = TRUE,
              `no-check-coding-practices` = TRUE)
        shell: Rscript {0}


